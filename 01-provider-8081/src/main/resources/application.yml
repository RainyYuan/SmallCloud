
server:
  port: 8081

spring:
# 配置spring-data-jpa
  jpa:
    # 指定是否在spring容器启动时创建表，默认为false
    generate-ddl: true
    # 指定是否在控制台显示sql语句，默认是false
    show-sql: true
    # 指定应用重启时不重新更新表
    hibernate:
      ddl-auto: none
# 配置数据源
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql:///test?useUnicode=true&amp;characterEncoding=utf8
    username: root
    password: root123


# 配置日志
logging:
  pattern:
  # 自定义日志输出格式
    console: level-%level %msg%n

  # 控制日志的显示级别
  level:
    # 控制springboot启动时显示的日志级别:ERROR、WARN、INFO、DEBUG 或 TRACE
      #1、INFO level表明消息在粗粒度级别上突出强调应用程序的运行过程，只需要了解该方法是否运行的可以使用INFO
      #2、DEBUG Level指出细粒度信息事件对调试应用程序是非常有帮助的,一般认为比较重要的方法执行需要详细查看运行情况的则开启
    root: info
    # 控制hibernate运行时的日志级别
    org.hibernate: info
    # 在show-sql为true 时显示SQL中的动态参数值
    org.hibernate.type.descriptor.sql.BasicBinder: trace
    # 控制自己代码运行时显示的日志级别
    com.abc.msc: debug






